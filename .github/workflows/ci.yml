name: Docker Image

on:
  push:
    branches:
    - main

jobs:
  build_app:
    name: Build Django App
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      name: Checkout repository
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: AstroPlasmaHQ
        password: ${{ github.token }}
    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - name: Build image and push
      uses: docker/build-push-action@v3
      with:
        push: true
        context: .
        file: deployment/dockerfiles/django.dockerfile
        tags: ghcr.io/AstroPlasmaHQ/CloudyInterpolator:webapp
        platforms: linux/amd64,linux/arm64
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
    - name: Replace proper cache file
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  build_static_serve:
    name: Build Static File Server
    runs-on: ubuntu-latest
    steps:
    - run: |
        sudo apt update
        sudo apt install -y --no-install-recommends --no-install-suggests libhdf5-dev libopenmpi-dev openmpi-bin git gcc g++
      name: Configure environment
    - uses: actions/checkout@v3
      name: Checkout repository
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: AstroPlasmaHQ
        password: ${{ github.token }}
    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - uses: actions/setup-node@v3
      with:
        node-version: 19
        cache: yarn
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install poetry
      uses: snok/install-poetry@v1.3.3
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
    - run: poetry install
      name: Install dependencies
    - run: yarn install --silent --no-progress --frozen-lockfile
      name: Install yarn packages
    - run: yarn build:prod
      name: Build production assets
    - run: |
        poetry run ./manage.py collectstatic -c --no-input
      name: Collect static files
      env:
        PY_ENV: dev
    - name: Build image and push
      uses: docker/build-push-action@v3
      with:
        push: true
        context: .
        file: deployment/dockerfiles/static.dockerfile
        tags: ghcr.io/AstroPlasmaHQ/CloudyInterpolator:static-serve
        platforms: linux/amd64,linux/arm64
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
    - name: Replace proper cache file
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
